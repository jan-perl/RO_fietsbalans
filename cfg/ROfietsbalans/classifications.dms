container Classifications: Using = "Units"
{
// =========  Classificaties voor Percentages
	unit<uint8> Percentage13K: nrofrows = 13
	{
		attribute<percent> ClassBreaks: DialogType = "Classification",
			[0,10,20,30,40,50,60,70,80,90,100,120,150];

		attribute<uint32> BrushColor : DialogType = "BrushColor",
			[
				 rgb(255,255,255),rgb(255,229,204),rgb(255,204,153)
				,rgb(255,178,102),rgb(255,153, 51),rgb(255,128,  0)
				,rgb(223, 96, 32),rgb(191, 64, 64),rgb(180,  0,  0)
				,rgb(120,  0,  0),rgb( 60,  0,  0),rgb(120,  0,128),rgb(255,  0,200)
			];
        parameter<uint32> PenColor      := rgb(192,192,255), DialogType = "PenColor";
		parameter<int16>  PenWidth      := 0s          , DialogType = "PenWidth";
		parameter<meter>  PenWorldWidth := 0[meter]    , DialogType = "PenWorldWidth";
		attribute<string> label : DialogType = "LabelText",
			[' 0 -  10','10 -  20','20 -  30','30 -  40','40 -  50','50 -  60','60 -  70','70 -  80','80 -  90','90 - 100','100- 120','120- 150','150- 200'];
	}

    Template clipcolorval13F
    {
    // begin case parameters
    attribute<int32> valsin (Ratio13F);
    // end case parameters
     attribute<int32> valsclip (Ratio13F) := iif(int32(0) > valsin,int32(0),iif(int32(255) < valsin,int32(255),valsin));
    }

	unit<uint8> Ratio13F: nrofrows = 12
	{
		//attribute<ratio> ClassBreaks: DialogType = "Classification", [ 0,.2,.3,.4,.5,.55,.6,.65,.7,.75,.8,.9];
		attribute<ratio> ClassBreaks: DialogType = "Classification", [ 0,.5,.55,.575,.6,.625,.65,.675,.7,.725,.75,.8];
        
		attribute<int32> vb:= clipcolorval13F(ramp(-120,int32(250),Ratio13F));
		attribute<int32> vr := clipcolorval13F( ramp(int32(250),-120,Ratio13F));
		attribute<int32> vg := clipcolorval13F( (int32(250)-vb/valsclip-vr/valsclip) *int32(2));
		
		attribute<uint32>  BrushColor := rgb(vr/valsclip,vg/valsclip,vb/valsclip) ,DialogType = "BrushColor";
		
		attribute<uint32> BrushColor_old : DialogType = "BrushColor",
			[
				rgb(255,229,204),rgb(255,204,153)
				,rgb(255,178,102),rgb(255,153, 51),rgb(255,128,  0)
				,rgb(223, 96, 32),rgb(191, 64, 64),rgb(180,  0,  0)
				,rgb(120,  0,  0),rgb( 60,  0,  0),rgb(120,  0,128),rgb(255,  0,200)
			];
        parameter<uint32> PenColor      := Percentage13K/PenColor, DialogType = "PenColor";
		parameter<int16>  PenWidth      := Percentage13K/PenWidth, DialogType = "PenWidth";
		parameter<meter>  PenWorldWidth := Percentage13K/PenWorldWidth, DialogType = "PenWorldWidth";
		attribute<string> label : DialogType = "LabelText",
			['0 -  50','50 -  55','55 -  57','58 -  60','60 -  62','63 -  65','65 -  67','68 -  70','70 -  72','73 -  75','75 -  80',' 80-    '];
	}

	unit<uint8> ratio9K: nrofrows = 9
	{
		attribute<ratio> ClassBreaks: DialogType = "Classification",
			[0,0.0001,0.15,0.30,0.45,0.60,0.75,0.90,1.05];

		attribute<uint32> BrushColor: DialogType = "BrushColor",
			[
				 rgb(218,218,218), rgb(255,255,204),rgb(255,255,128)
				,rgb(255,230,102), rgb(255,179, 51),rgb(255,128,  0)
				,rgb(255, 51,  0), rgb(230,  0,  0),rgb(153,  0,  0)
			];

        parameter<uint32> PenColor      := Percentage13K/PenColor, DialogType = "PenColor";
		parameter<int16>  PenWidth      := Percentage13K/PenWidth, DialogType = "PenWidth";
		attribute<uint32> SymbolColor:= BrushColor, DialogType = "SymbolColor";

		attribute<string> label : DialogType = "LabelText",
			[' 0 ', '0    - 0.15', '0.15 - 0.30', '0.30 - 0.45', '0.45 - 0.60', '0.60 - 0.75', '0.75 - 0.90', '0.90 - 1.05', '> 1.05'];
	}

	unit<uint8> ratio9F: nrofrows = 8
	{
		attribute<ratio> ClassBreaks: DialogType = "Classification",
			[0,0.40,0.55,0.65,0.70,0.75, 0.8,0.9];

		attribute<uint32> BrushColor: DialogType = "BrushColor",
			[
				 rgb(255,255,204),rgb(255,255,128)
				,rgb(255,230,102), rgb(255,179, 51),rgb(255,128,  0)
				,rgb(255, 51,  0), rgb(230,  0,  0),rgb(153,  0,  0)
			];
        parameter<uint32> PenColor      := Percentage13K/PenColor, DialogType = "PenColor";
		parameter<int16>  PenWidth      := Percentage13K/PenWidth, DialogType = "PenWidth";
		attribute<uint32> SymbolColor:= BrushColor, DialogType = "SymbolColor";

		attribute<string> label : DialogType = "LabelText",
			[ '0    - 0.40', '0.40 - 0.55', '0.55 - 0.65', '0.65 - 0.70', '0.70 - 0.75',  '0.75 - 0.80','0.80 - 0.90', '> 0.90'];
	}

	unit<uint8> example_for_size: nrofrows = 3 // Domain unit with three rows
	{
		attribute<nr_inh> ClassBreaks: [      0, 1000000  ,2000000];                                        // Set classbreaks at given intervals of inhabitants
		attribute<string> label:       ['small', 'medium' ,'large'];                                        // Semantic labels
		attribute<uint32> BrushColor:  [rgb(0,255,0),rgb(0,0,255),rgb(255,0,0)], DialogType = "BrushColor"; // Use colors: Green, Blue, Red
	}
}
